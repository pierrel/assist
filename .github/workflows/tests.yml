name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "Python"
            test_type: "python"
          - name: "Emacs"
            test_type: "emacs"
    name: Test ${{ matrix.name }}
    steps:
      - uses: actions/checkout@v3
      
      # Common setup steps
      - uses: actions/setup-python@v4
        if: matrix.test_type == 'python'
        with:
          python-version: '3.11'
      
      # Python-specific steps
      - name: Install Python dependencies
        if: matrix.test_type == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Render reflexion graph
        if: matrix.test_type == 'python'
        run: |
          python scripts/render_reflexion_graph.py --output-dir generated/reflexion_graph
          git diff --exit-code generated/reflexion_graph
      - name: Static type analysis
        if: matrix.test_type == 'python'
        run: mypy src | tee mypy-report.txt
        continue-on-error: true
      - name: Upload mypy report
        if: matrix.test_type == 'python' && always()
        uses: actions/upload-artifact@v4
        with:
          name: mypy-report
          path: mypy-report.txt
          if-no-files-found: ignore
      - name: Run Python tests with coverage
        if: matrix.test_type == 'python'
        run: pytest -vv
      - name: Upload coverage report
        if: matrix.test_type == 'python' && always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          if-no-files-found: ignore
      
      # Emacs-specific steps
      - name: Install Emacs
        if: matrix.test_type == 'emacs'
        run: |
          sudo apt-get update
          sudo apt-get install -y emacs-nox
      - name: Install Eldev
        if: matrix.test_type == 'emacs'
        run: |
          curl -fsSL https://raw.githubusercontent.com/doublep/eldev/master/webinstall/github-eldev | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Run Emacs linting with eldev
        if: matrix.test_type == 'emacs'
        working-directory: ./emacs
        run: |
          # Try eldev first, fallback to direct emacs if network issues
          if timeout 180 eldev lint; then
            echo "Eldev linting completed successfully"
          else
            echo "Eldev failed, running basic linting with emacs directly"
            emacs --batch -l assist.el --eval "(byte-compile-file \"assist.el\")"
          fi
      - name: Run Emacs tests with eldev
        if: matrix.test_type == 'emacs'
        working-directory: ./emacs
        run: |
          # Try eldev first, fallback to direct emacs if network issues
          if timeout 180 eldev test; then
            echo "Eldev tests completed successfully"
          else
            echo "Eldev failed, running tests with emacs directly"
            emacs --batch -L . -L tests -l tests/test-assist.el -f ert-run-tests-batch-and-exit
          fi
